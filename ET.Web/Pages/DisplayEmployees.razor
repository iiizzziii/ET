@page "/employees"
@using ET.Models
@using ET.Web.Services
@inject IEmployeeService EmployeeService

<h3>Employees</h3>

@if (employees == null) {
    <p>Loading employees...</p>
}
else if (!employees.Any()) {
    <p>No employees found.</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Surname</th>
            <th>Birth date</th>
            @* <th>Position</th> *@
            <th>Ip address</th>
            <th>Delete</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var employee in employees)
        {
            <tr @key="employee.EmployeeId">
                <td>@employee.Name</td>
                <td>@employee.Surname</td>
                <td>@employee.BirthDate</td>
                @* <td>@employee.Position</td> *@
                <td>@employee.IpAddress</td>
                <td>
                    @* <button class="btn btn-primary" @onclick="() => EditEmployee(employee.Id)">Edit</button> *@
                    <button class="btn btn-danger" @onclick="() => DeleteEmployee(employee.EmployeeId)">X</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@* <button class="btn btn-success" @onclick="AddEmployee">Add Employee</button> *@

@* ReSharper disable once InconsistentNaming *@
@code {
    [Parameter]
    public IEnumerable<Employee>? employees { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        employees = await EmployeeService.GetEmployees();
    }

    // private async Task EditEmployee(int id)
    // {
    //     // Navigate to edit page
    //     NavigationManager.NavigateTo($"/employees/edit/{id}");
    // }
    //
    private async Task DeleteEmployee(int id)
    {
        Console.WriteLine($"deleting {id}");
        
        if (await EmployeeService.DeleteEmployee(id))
        {
            employees = await EmployeeService.GetEmployees();
        }
        else
        {
            Console.WriteLine("Failed to delete employee.");
        }
    }
    //
    // private void AddEmployee()
    // {
    //     NavigationManager.NavigateTo("/employees/add");
    // }
}